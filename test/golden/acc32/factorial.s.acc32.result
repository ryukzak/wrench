0:	input_addr
4:	output_addr
8:	n
12:	result
16:	const_1
20:	_start
32:	factorial_begin
41:	factorial_while
74:	factorial_end
83:	not_in_domain
94:	factorial_overflow
---
mem[0..3]: 	80 00 00 00	@"input_addr"
mem[4..7]: 	84 00 00 00	@"output_addr"
mem[8..11]: 	00 00 00 00	@"n"
mem[12..15]: 	01 00 00 00	@"result"
mem[16..19]: 	01 00 00 00	@"const_1"
mem[20..22]: 	Load (-20) 	@_start
mem[23..23]: 	LoadAcc
mem[24..26]: 	Store (-16)
mem[27..31]: 	Blz 83
mem[32..34]: 	Load (-16) 	@factorial_begin
mem[35..37]: 	Store (-23)
mem[38..40]: 	Load (-30)
mem[41..45]: 	Beqz 74 	@factorial_while
mem[46..48]: 	Load (-34)
mem[49..51]: 	Mul 8
mem[52..56]: 	Bvs 94
mem[57..59]: 	Store (-45)
mem[60..62]: 	Load (-52)
mem[63..65]: 	Sub 16
mem[66..68]: 	Store (-58)
mem[69..73]: 	Jmp 41
mem[74..76]: 	Load (-62) 	@factorial_end
mem[77..81]: 	StoreInd 4
mem[82..82]: 	Halt
mem[83..87]: 	LoadImm (-1) 	@not_in_domain
mem[88..92]: 	StoreInd 4
mem[93..93]: 	Halt
mem[94..98]: 	LoadImm (-858993460) 	@factorial_overflow
mem[99..103]: 	StoreInd 4
mem[104..104]: 	Halt
mem[105..999]: 	( 00 )
---
