0:	buf
13:	output_addr
17:	_start
37:	while
61:	end
---
mem[0..16]: 	48 65 6c 6c 6f 0a 00 57 6f 72 6c 64 21 84 00 00 00
mem[17..20]: 	Lui {rd = T0, k = 13} 	@_start
mem[21..24]: 	Addi {rd = T0, rs1 = T0, k = 13}
mem[25..28]: 	Lw {rd = T0, offsetRs1 = MemRef {mrOffset = 0, mrReg = T0}}
mem[29..32]: 	Addi {rd = T1, rs1 = T1, k = 0}
mem[33..36]: 	Li {rd = T2, k = 13}
mem[37..40]: 	Beqz {rs1 = T2, k = 24} 	@while
mem[41..44]: 	Addi {rd = T2, rs1 = T2, k = -1}
mem[45..48]: 	Lw {rd = T3, offsetRs1 = MemRef {mrOffset = 0, mrReg = T1}}
mem[49..52]: 	Sb {rs2 = T3, offsetRs1 = MemRef {mrOffset = 0, mrReg = T0}}
mem[53..56]: 	Addi {rd = T1, rs1 = T1, k = 1}
mem[57..60]: 	J {k = -20}
mem[61..64]: 	Halt 	@end