0:	input_addr
4:	output_addr
8:	_start
46:	factorial_while
72:	factorial_0
84:	factorial_not_in_domain
96:	factorial_overflow
108:	factorial_end
---
mem[0..3]: 	80 00 00 00	@"input_addr"
mem[4..7]: 	84 00 00 00	@"output_addr"
mem[8..13]: 	MoveA {mode = Long, src = Immediate 0, dst = DirectAddrReg A6} 	@_start
mem[14..17]: 	MoveA {mode = Long, src = IndirectAddrReg 0 A6 Nothing, dst = DirectAddrReg A6}
mem[18..23]: 	MoveA {mode = Long, src = Immediate 4, dst = DirectAddrReg A7}
mem[24..27]: 	MoveA {mode = Long, src = IndirectAddrReg 0 A7 Nothing, dst = DirectAddrReg A7}
mem[28..31]: 	Move {mode = Long, src = IndirectAddrReg 0 A6 Nothing, dst = DirectDataReg D0}
mem[32..37]: 	Beq {ref = 72}
mem[38..43]: 	Ble {ref = 84}
mem[44..45]: 	Move {mode = Long, src = DirectDataReg D0, dst = DirectDataReg D1}
mem[46..51]: 	Sub {mode = Long, src = Immediate 1, dst = DirectDataReg D1} 	@factorial_while
mem[52..57]: 	Beq {ref = 108}
mem[58..59]: 	Mul {mode = Long, src = DirectDataReg D1, dst = DirectDataReg D0}
mem[60..65]: 	Bvs {ref = 96}
mem[66..71]: 	Jmp {ref = 46}
mem[72..77]: 	Move {mode = Long, src = Immediate 1, dst = DirectDataReg D0} 	@factorial_0
mem[78..83]: 	Jmp {ref = 108}
mem[84..89]: 	Move {mode = Long, src = Immediate (-1), dst = DirectDataReg D0} 	@factorial_not_in_domain
mem[90..95]: 	Jmp {ref = 108}
mem[96..101]: 	Move {mode = Long, src = Immediate (-858993460), dst = DirectDataReg D0} 	@factorial_overflow
mem[102..107]: 	Jmp {ref = 108}
mem[108..111]: 	Move {mode = Long, src = DirectDataReg D0, dst = IndirectAddrReg 0 A7 Nothing} 	@factorial_end
mem[112..113]: 	Halt
mem[114..999]: 	( 00 )
---
